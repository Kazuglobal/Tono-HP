import React, { useState } from 'react';
import { ChevronLeft, ChevronRight, Download, Eye, Calendar } from 'lucide-react';

const NewsletterArchiveScreen = ({ onNavigate }) => {
  const [currentPage, setCurrentPage] = useState(0);
  const [isFlipping, setIsFlipping] = useState(false);

  const newsletters = [
    {
      id: 'R6dousoukaihou',
      title: '‰ª§Âíå6Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2024Âπ¥',
      issue: 'Á¨¨1Âè∑',
      date: '2024Âπ¥3ÊúàÁô∫Ë°å',
      pages: 12,
      file: '/pdfs/R6dousoukaihou.pdf',
      description: 'Êñ∞Âπ¥Â∫¶„ÅÆÊ¥ªÂãïÂ†±Âëä„Å®‰ªäÂæå„ÅÆ‰∫àÂÆö„Çí„ÅäÁü•„Çâ„Åõ„Åó„Åæ„Åô„ÄÇ'
    },
    {
      id: 'R5dousoukaihou2',
      title: '‰ª§Âíå5Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2023Âπ¥',
      issue: 'Á¨¨2Âè∑',
      date: '2023Âπ¥9ÊúàÁô∫Ë°å',
      pages: 8,
      file: '/pdfs/R5dousoukaihou2.pdf',
      description: 'Â§è„ÅÆÊ¥ªÂãïÂ†±Âëä„Å®Áßã„ÅÆ„Ç§„Éô„É≥„ÉàÊ°àÂÜÖ„ÇíÊé≤Ëºâ„ÄÇ'
    },
    {
      id: 'R3dousoukaihou2',
      title: '‰ª§Âíå3Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2021Âπ¥',
      issue: 'Á¨¨2Âè∑',
      date: '2021Âπ¥9ÊúàÁô∫Ë°å',
      pages: 6,
      file: '/pdfs/R3dousoukaihou2.pdf',
      description: '„Ç≥„É≠„ÉäÁ¶ç„Åß„ÅÆÊ¥ªÂãïÂ†±Âëä„Å®Êñ∞„Åó„ÅÑÂèñ„ÇäÁµÑ„Åø„Å´„Å§„ÅÑ„Å¶„ÄÇ'
    },
    {
      id: 'R2dousoukaihou2',
      title: '‰ª§Âíå2Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2020Âπ¥',
      issue: 'Á¨¨2Âè∑',
      date: '2020Âπ¥9ÊúàÁô∫Ë°å',
      pages: 8,
      file: '/pdfs/R2dousoukaihou2.pdf',
      description: 'Êñ∞Âûã„Ç≥„É≠„Éä„Ç¶„Ç§„É´„ÇπÂØæÂøú„Å®Ê¥ªÂãï„ÅÆÂ§âÂåñ„Å´„Å§„ÅÑ„Å¶„ÄÇ'
    },
    {
      id: 'R2dousoukaihou1',
      title: '‰ª§Âíå2Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2020Âπ¥',
      issue: 'Á¨¨1Âè∑',
      date: '2020Âπ¥3ÊúàÁô∫Ë°å',
      pages: 24,
      file: '/pdfs/R2dousoukaihou1.pdf',
      description: 'Êñ∞Âπ¥Â∫¶„ÅÆÊä±Ë≤†„Å®Â§ßË¶èÊ®°„Å™Ê¥ªÂãïÂ†±Âëä„ÇíÊé≤Ëºâ„ÄÇ'
    },
    {
      id: 'R1dousoukaihou2',
      title: '‰ª§ÂíåÂÖÉÂπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2019Âπ¥',
      issue: 'Á¨¨2Âè∑',
      date: '2019Âπ¥9ÊúàÁô∫Ë°å',
      pages: 8,
      file: '/pdfs/R1dousoukaihou2.pdf',
      description: '‰ª§ÂíåÊúÄÂàù„ÅÆÂêåÁ™ì‰ºöÂ†±„Å®„Åó„Å¶Ë®òÂøµ„Åô„Åπ„ÅçÂÜÖÂÆπ„ÄÇ'
    },
    {
      id: 'h31dousoukaihou1',
      title: 'Âπ≥Êàê31Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2019Âπ¥',
      issue: 'Á¨¨1Âè∑',
      date: '2019Âπ¥3ÊúàÁô∫Ë°å',
      pages: 32,
      file: '/pdfs/h31dousoukaihou1.pdf',
      description: 'Âπ≥ÊàêÊúÄÂæå„ÅÆÂêåÁ™ì‰ºöÂ†±„Å®„Åó„Å¶ÁâπÂà•Á∑®ÈõÜ„ÄÇ'
    },
    {
      id: 'h30dousoukaihou2',
      title: 'Âπ≥Êàê30Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2018Âπ¥',
      issue: 'Á¨¨2Âè∑',
      date: '2018Âπ¥9ÊúàÁô∫Ë°å',
      pages: 10,
      file: '/pdfs/h30dousoukaihou2.pdf',
      description: 'ÂâµÁ´ãË®òÂøµË°å‰∫ã„ÅÆÂ†±Âëä„Çí‰∏≠ÂøÉ„Å´ÊßãÊàê„ÄÇ'
    },
    {
      id: 'h30dousoukaihou1',
      title: 'Âπ≥Êàê30Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2018Âπ¥',
      issue: 'Á¨¨1Âè∑',
      date: '2018Âπ¥3ÊúàÁô∫Ë°å',
      pages: 20,
      file: '/pdfs/h30dousoukaihou1.pdf',
      description: 'Êñ∞‰ΩìÂà∂„Åß„ÅÆÊ¥ªÂãïÈñãÂßã„Å®‰ªäÂæå„ÅÆÊñπÈáù„Å´„Å§„ÅÑ„Å¶„ÄÇ'
    },
    {
      id: 'h29dousoukaihou2',
      title: 'Âπ≥Êàê29Âπ¥Â∫¶ ÂêåÁ™ì‰ºöÂ†±',
      year: '2017Âπ¥',
      issue: 'Á¨¨2Âè∑',
      date: '2017Âπ¥9ÊúàÁô∫Ë°å',
      pages: 12,
      file: '/pdfs/h29dousoukaihou2.pdf',
      description: 'Áßã„ÅÆÊ¥ªÂãïÂ†±Âëä„Å®ÂçíÊ•≠Áîü„ÅÆËøëÊ≥Å„Çí„Åä‰ºù„Åà„Åó„Åæ„Åô„ÄÇ'
    }
  ];

  const itemsPerPage = 2;
  const totalPages = Math.ceil(newsletters.length / itemsPerPage);

  const handlePageChange = (direction) => {
    if (isFlipping) return;
    
    setIsFlipping(true);
    setTimeout(() => {
      if (direction === 'next' && currentPage < totalPages - 1) {
        setCurrentPage(currentPage + 1);
      } else if (direction === 'prev' && currentPage > 0) {
        setCurrentPage(currentPage - 1);
      }
      setIsFlipping(false);
    }, 300);
  };

  const getCurrentItems = () => {
    const startIndex = currentPage * itemsPerPage;
    return newsletters.slice(startIndex, startIndex + itemsPerPage);
  };

  const handleDownload = (file, title) => {
    const link = document.createElement('a');
    link.href = file;
    link.download = `${title}.pdf`;
    link.click();
  };

  return (
    <div className="bg-off-white min-h-screen">
      <div className="px-4 py-6">
        <h1 className="text-xl font-mincho font-semibold wine-red mb-6">
          ÈÅéÂéª„ÅÆ‰ºöÂ†±„Éê„ÉÉ„ÇØ„Éä„É≥„Éê„Éº
        </h1>

        {/* Áµ±Ë®àÊÉÖÂ†± */}
        <div className="bg-white rounded-lg p-4 card-shadow mb-6">
          <div className="grid grid-cols-3 gap-4 text-center">
            <div>
              <div className="text-2xl font-bold wine-red">{newsletters.length}</div>
              <div className="text-sm text-gray-600">Á∑èÁô∫Ë°åÊï∞</div>
            </div>
            <div>
              <div className="text-2xl font-bold wine-red">6</div>
              <div className="text-sm text-gray-600">Áô∫Ë°åÂπ¥Êï∞</div>
            </div>
            <div>
              <div className="text-2xl font-bold wine-red">Âπ¥2Âõû</div>
              <div className="text-sm text-gray-600">Áô∫Ë°åÈ†ªÂ∫¶</div>
            </div>
          </div>
        </div>

        {/* „Éö„Éº„Ç∏„ÇÅ„Åè„Çä„Ç≥„É≥„Éà„É≠„Éº„É´ */}
        <div className="flex items-center justify-between mb-4">
          <button
            onClick={() => handlePageChange('prev')}
            disabled={currentPage === 0 || isFlipping}
            className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${
              currentPage === 0 || isFlipping
                ? 'bg-gray-200 text-gray-400 cursor-not-allowed'
                : 'bg-wine-red text-white hover:bg-wine-red/90'
            }`}
          >
            <ChevronLeft className="w-4 h-4" />
            <span>Ââç„ÅÆ„Éö„Éº„Ç∏</span>
          </button>

          <div className="flex items-center space-x-2">
            <span className="text-sm text-gray-600">
              {currentPage + 1} / {totalPages}
            </span>
          </div>

          <button
            onClick={() => handlePageChange('next')}
            disabled={currentPage === totalPages - 1 || isFlipping}
            className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${
              currentPage === totalPages - 1 || isFlipping
                ? 'bg-gray-200 text-gray-400 cursor-not-allowed'
                : 'bg-wine-red text-white hover:bg-wine-red/90'
            }`}
          >
            <span>Ê¨°„ÅÆ„Éö„Éº„Ç∏</span>
            <ChevronRight className="w-4 h-4" />
          </button>
        </div>

        {/* ‰ºöÂ†±‰∏ÄË¶ß - „Éö„Éº„Ç∏„ÇÅ„Åè„Çä„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ */}
        <div className="relative">
          <div 
            className={`transition-all duration-300 ${
              isFlipping ? 'transform scale-95 opacity-50' : 'transform scale-100 opacity-100'
            }`}
          >
            <div className="space-y-4">
              {getCurrentItems().map((newsletter, index) => (
                <div 
                  key={newsletter.id} 
                  className={`bg-white rounded-lg p-6 card-shadow transform transition-all duration-500 ${
                    isFlipping ? 'rotate-y-180' : 'rotate-y-0'
                  }`}
                  style={{
                    transformStyle: 'preserve-3d',
                    animationDelay: `${index * 100}ms`
                  }}
                >
                  <div className="flex items-start justify-between mb-4">
                    <div className="flex-1">
                      <div className="flex items-center space-x-2 mb-2">
                        <Calendar className="w-4 h-4 text-wine-red" />
                        <span className="text-sm text-wine-red font-medium">{newsletter.date}</span>
                      </div>
                      <h3 className="text-lg font-mincho font-semibold text-gray-900 mb-1">
                        {newsletter.title}
                      </h3>
                      <p className="text-sm text-gray-600 mb-2">
                        {newsletter.issue} ‚Ä¢ {newsletter.pages}„Éö„Éº„Ç∏
                      </p>
                      <p className="text-sm text-gray-700">
                        {newsletter.description}
                      </p>
                    </div>
                    <div className="flex flex-col space-y-2 ml-4">
                      <button
                        onClick={() => window.open(newsletter.file, '_blank')}
                        className="flex items-center space-x-2 px-3 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm"
                      >
                        <Eye className="w-4 h-4" />
                        <span>Èñ≤Ë¶ß</span>
                      </button>
                      <button
                        onClick={() => handleDownload(newsletter.file, newsletter.title)}
                        className="flex items-center space-x-2 px-3 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors text-sm"
                      >
                        <Download className="w-4 h-4" />
                        <span>DL</span>
                      </button>
                    </div>
                  </div>
                  
                  {/* „Éó„É¨„Éì„É•„Éº„Ç®„É™„Ç¢ */}
                  <div className="border-t pt-4">
                    <div className="bg-gray-100 rounded-lg p-4 text-center">
                      <div className="text-gray-500 mb-2">
                        üìÑ PDF „Éó„É¨„Éì„É•„Éº
                      </div>
                      <p className="text-xs text-gray-600">
                        „ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶‰ºöÂ†±„ÇíÈñ≤Ë¶ß„Éª„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åß„Åç„Åæ„Åô
                      </p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* „Éö„Éº„Ç∏„Ç§„É≥„Ç∏„Ç±„Éº„Çø„Éº */}
        <div className="flex justify-center mt-6 space-x-2">
          {Array.from({ length: totalPages }, (_, index) => (
            <button
              key={index}
              onClick={() => {
                if (!isFlipping) {
                  setIsFlipping(true);
                  setTimeout(() => {
                    setCurrentPage(index);
                    setIsFlipping(false);
                  }, 300);
                }
              }}
              className={`w-3 h-3 rounded-full transition-all ${
                index === currentPage
                  ? 'bg-wine-red'
                  : 'bg-gray-300 hover:bg-gray-400'
              }`}
            />
          ))}
        </div>

        {/* ‰ºöÂ†±„Å´„Å§„ÅÑ„Å¶ */}
        <div className="mt-8 bg-wine-red text-white rounded-lg p-6">
          <h2 className="text-lg font-mincho font-semibold mb-3">
            ÂêåÁ™ì‰ºöÂ†±„Å´„Å§„ÅÑ„Å¶
          </h2>
          <div className="space-y-2 text-sm">
            <p>‚Ä¢ Âπ¥2ÂõûÔºà3Êúà„Éª9ÊúàÔºâÂÆöÊúüÁô∫Ë°å</p>
            <p>‚Ä¢ ÂêåÁ™ìÁîü„ÅÆËøëÊ≥Å„ÇÑÂ≠¶Ê†°„ÅÆÊßòÂ≠ê„Çí„Åä‰ºù„Åà</p>
            <p>‚Ä¢ ÂêÑÁ®Æ„Ç§„Éô„É≥„Éà„ÅÆÂ†±Âëä„Å®‰∫àÂÆö„Çí„ÅîÊ°àÂÜÖ</p>
            <p>‚Ä¢ ÂçíÊ•≠Áîü„ÅÆÊ¥ªË∫ç„ÇÑÂäüÁ∏æ„ÇíÁ¥π‰ªã</p>
          </div>
          <button 
            onClick={() => onNavigate('contact')}
            className="mt-4 bg-white text-wine-red px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors"
          >
            ‰ºöÂ†±„Å´Èñ¢„Åô„Çã„ÅäÂïè„ÅÑÂêà„Çè„Åõ
          </button>
        </div>
      </div>
    </div>
  );
};

export default NewsletterArchiveScreen;

